<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Astrogator</name>
    </assembly>
    <members>
        <member name="T:Astrogator.FlightAstrogator">
             KSPAddon can only apply one scene per class; this is the one for the flight scene.
            </member>
        <member name="T:Astrogator.TrackingStationAstrogator">
             KSPAddon can only apply one scene per class; this is the one for the tracking station scene.
            </member>
        <member name="T:Astrogator.SpaceCenterAstrogator">
             KSPAddon can only apply one scene per class; this is the one for the KSC scene.
            </member>
        <member name="T:Astrogator.Astrogator">
             Our main plugin behavior.
            </member>
        <member name="F:Astrogator.Astrogator.Name">
             <summary>
             Machine-readable name for this mod.
             Use this for directory/file names, etc.
             Use AstrogationView.DisplayName for user visible text.
             (Yes, they are the same at the moment. Don't worry about that.)
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.Start">
             <summary>
             This is called at creation
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.OnDisable">
             <summary>
             This is called at destroy
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.onAppLaunchToggleOn">
             <summary>
             This is called when they click our toolbar button
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.onAppLaunchToggleOff">
             <summary>
             This is called when they click our toolbar button again
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.ShowMainWindow">
             <summary>
             Open the main window listing transfers.
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.HideMainWindow(System.Boolean)">
             <summary>
             Close the main window.
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.ResetViewBackground">
             <summary>
             Unity completely freaks out, sometimes with a hard crash,
             if you try to open a window from a background thread when it's not ready.
             So instead we'll just make a note and do it in the next Update() call.
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.Update">
             <summary>
             Called by the framework for each UI tick.
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.FixedUpdate">
             <summary>
             Called by the framework for each physics tick.
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.SOIChanged(CelestialBody)">
             <summary>
             React to the sphere of influence of the vessel changing by resetting the model and view.
             </summary>
            </member>
        <member name="M:Astrogator.Astrogator.TrackingStationTargetChanged(MapObject)">
             <summary>
             React to the tracking station focus changing by resetting the model and view.
             Note that we have to make sure there's no active vessel to avoid doing this
             in flight mode's map view.
             </summary>
            </member>
        <member name="T:Astrogator.AstrogatorMenu">
             <summary>
             https://github.com/Mihara/RasterPropMonitor/wiki/Page-handlers
             </summary>
            </member>
        <member name="F:Astrogator.AstrogatorMenu.buttonUp">
             <summary>
             Key code for the upward pointing wedge button, overridable by RPM configuration.
             We use it to move the selection up by one row.
             </summary>
            </member>
        <member name="F:Astrogator.AstrogatorMenu.buttonDown">
             <summary>
             Key code for the downward pointing wedge button, overridable by RPM configuration.
             We use it to move the selection down by one row.
             </summary>
            </member>
        <member name="F:Astrogator.AstrogatorMenu.buttonEnter">
             <summary>
             Key code for the left arrow button, overridable by RPM configuration.
             We use it to create maneuvers for the selected transfer.
             </summary>
            </member>
        <member name="F:Astrogator.AstrogatorMenu.buttonEsc">
             <summary>
             Key code for the X button, overridable by RPM configuration.
             We use it to delete all active maneuvers.
             </summary>
            </member>
        <member name="F:Astrogator.AstrogatorMenu.buttonHome">
             <summary>
             Key code for the circle button, overridable by RPM configuration.
             We use it to warp to the selected transfer.
             </summary>
            </member>
        <member name="F:Astrogator.AstrogatorMenu.buttonRight">
             <summary>
             Key code for the rightward pointing wedge button, overridable by RPM configuration.
             We use it to scroll to the next page of transfers, if any.
             </summary>
            </member>
        <member name="F:Astrogator.AstrogatorMenu.buttonLeft">
             <summary>
             Key code for the leftward pointing wedge button, overridable by RPM configuration.
             We use it to scroll to the previous page of transfers, if any.
             </summary>
            </member>
        <member name="M:Astrogator.AstrogatorMenu.ShowMenu(System.Int32,System.Int32)">
             <summary>
             Generate a text string representing the current transfers.
             Called by RasterPropMonitor based on our cfg file.
             Line 1: Branding title
             Line 2: Subtitle, centered and gray
             Line 3: Blank
             Line 4: Table headers
             Line 5+: Transfer info
             </summary>
             <param name="columns">Number of characters from left edge to right edges</param>
             <param name="rows">Number of characters from top edge to bottom edge</param>
             <returns>
             A string to be displayed on a monitor in IVA.
             </returns>
            </member>
        <member name="M:Astrogator.AstrogatorMenu.PageActive(System.Boolean,System.Int32)">
             <summary>
             Turn data loading on and off.
             Called by RasterPropMonitor based on our cfg file to tell us we're visible or invisible.
             </summary>
             <param name="pageActive">True if active, false otherwise</param>
             <param name="pageNumber">A number that's meaningful to RasterPropMonitor but not to us</param>
            </member>
        <member name="M:Astrogator.AstrogatorMenu.ButtonClick(System.Int32)">
             <summary>
             React to the user pressing buttons on the multifunction display.
             Called by RasterPropMonitor based on our cfg file.
             </summary>
             <param name="buttonNumber">Which button was pressed, to be compared to the button* properties with KSPField attributes</param>
            </member>
        <member name="M:Astrogator.AstrogatorMenu.ButtonRelease(System.Int32)">
             <summary>
             React to the user releasing buttons on the multifunction display.
             Called by RasterPropMonitor based on our cfg file.
             </summary>
             <param name="buttonNumber">Which button was released, to be compared to the button* properties with KSPField attributes</param>
            </member>
        <member name="T:Astrogator.KerbalTools">
             Shared low level tools for dealing with KSP APIs.
            </member>
        <member name="M:Astrogator.KerbalTools.ScreenFmt(System.String,System.Object[])">
             <summary>
             Show a formattable string to the user.
             </summary>
             <param name="format">String.Format format string</param>
             <param name="args">Parameters for the format string, if any</param>
            </member>
        <member name="M:Astrogator.KerbalTools.Landed(ITargetable)">
             <summary>
             True if the craft is sitting on a surface (solid or liquid) rather than on an orbit.
             </summary>
            </member>
        <member name="M:Astrogator.KerbalTools.solidBodyWithoutVessel(ITargetable)">
             <summary>
             Check whether the target is a body with a solid surface
             </summary>
             <param name="t">Target to check</param>
             <returns>
             True if body with solid surface, false if non-body or no solid surface
             </returns>
            </member>
        <member name="M:Astrogator.KerbalTools.SameSOITransfer(ITargetable,ITargetable)">
             <summary>
             Check whether a burn from one target to another constitutes a same-SOI transfer
             </summary>
             <param name="start">The body from which we start</param>
             <param name="end">The body where we end up</param>
             <returns>
             True if same SOI transfer, false if an ejection angle is involved
             </returns>
            </member>
        <member name="M:Astrogator.KerbalTools.AncestorsInclude(CelestialBody,CelestialBody)">
             <summary>
             Check whether a given body is one of the ancestors of another
             </summary>
             <param name="child">The body of which to check the ancestors</param>
             <param name="ancestor">The body to look for in the list of ancestors</param>
             <returns>
             True if ancestor found, false otherwise
             </returns>
            </member>
        <member name="M:Astrogator.KerbalTools.IsTrackedAsteroid(Vessel)">
             <summary>
             Check whether a vessel is a tracked asteroid.
             Derived from CustomAsteroids and RasterPropMonitor.
             </summary>
             <param name="v">The vessel to check</param>
             <returns>
             True if v is a tracked asteroid, false otherwise.
             </returns>
            </member>
        <member name="M:Astrogator.KerbalTools.FocusMap(ITargetable,ITargetable)">
             <summary>
             Make the map view focus move to the given body.
             Borrowed and modified from Precise Node.
             </summary>
             <param name="center">The body or vessel to put at the middle of the screen</param>
             <param name="edge">A body or vessel to keep barely visible when we zoom</param>
            </member>
        <member name="M:Astrogator.KerbalTools.SetMapZoom(System.Single)">
             <summary>
             Zoom map view based on a desired screen width in meters.
             </summary>
             <param name="widthInMeters">Number of meters we'd like to be able to see across the screen</param>
            </member>
        <member name="M:Astrogator.KerbalTools.patchedConicsUnlocked">
             <summary>
             Check whether maneuver nodes are available in the current game mode.
             Borrowed from MechJeb.
             </summary>
            </member>
        <member name="M:Astrogator.KerbalTools.GoodLowOrbitRadius(CelestialBody)">
             <summary>
             Choose an radius for an orbit around the given body.
             </summary>
             <param name="body">The body for which to suggest a radius</param>
             <returns>
             About 10km above the atmosphere or the minimum safe distance.
             </returns>
            </member>
        <member name="M:Astrogator.KerbalTools.SphereOfInfluence(ITargetable)">
             <summary>
             Wrapper around CelestialBody.sphereOfInfluence to support ITargetable
             </summary>
             <param name="target">Body or vessel to check</param>
             <returns>
             Sphere of influence radius for bodies, 0 otherwise
             </returns>
            </member>
        <member name="M:Astrogator.KerbalTools.TheName(ITargetable)">
             <summary>
             Wrapper around CelestialBody.theName to support other targets as well.
             </summary>
             <param name="target">Body or vessel to check</param>
             <returns>
             Name of target, including gender markers
             (Historically, this checked CelestialBody.theName, which included a lower case
             version of some names such as "the Mun". This was removed in the localization
             update, and now we only have "The Mun" regardless of where in the sentence
             the string will be used. This has been reported on the bug tracker:
               http://bugs.kerbalspaceprogram.com/issues/14314 )
             </returns>
            </member>
        <member name="M:Astrogator.KerbalTools.StartBody(ITargetable)">
             <summary>
             Determine a starting point for finding destination bodies.
             </summary>
             <param name="target">Body or vessel to use</param>
            </member>
        <member name="M:Astrogator.KerbalTools.ParentBody(ITargetable)">
             <summary>
             Return the body to search for destinations next after the parameter.
             Essentially a wrapper around CelestialBody.referenceBody to make it
             return null for the sun instead of itself.
             </summary>
             <param name="target">Previous target we searched</param>
            </member>
        <member name="M:Astrogator.KerbalTools.ParentOrbit(Orbit)">
             <summary>
             Find the orbit that contains the given orbit.
             Wrapper around Orbit.referenceBody that returns
             null for the sun instead of the sun.
             </summary>
             <param name="currentOrbit">Orbit where we're starting</param>
             <returns>
             Parent orbit or null.
             </returns>
            </member>
        <member name="M:Astrogator.KerbalTools.NextPatch(Orbit)">
             <summary>
             Get the next part of an orbital path that goes across spheres of influence.
             A wrapper around Orbit.nextPatch that doesn't crash on FINAL orbits.
             </summary>
             <param name="currentPatch">The orbit from which we wish to advance</param>
             <returns>
             Next orbit if any, otherwise null.
             </returns>
            </member>
        <member name="M:Astrogator.KerbalTools.ClearManeuverNodes">
             <summary>
             Delete all the maneuver nodes for the active vessel.
             </summary>
            </member>
        <member name="M:Astrogator.KerbalTools.FilePath(System.String,System.Boolean)">
             <returns>
             The full relative path from the main KSP folder to a given resource from this mod.
             </returns>
             <param name="filename">Name of file located in our plugin folder</param>
             <param name="GameDataRelative">True if the KSP/GameData portion of the path is assumed, false if we need to provide the full path</param>
            </member>
        <member name="T:Astrogator.WrappingToggle">
             <summary>
             Wrapper around DialogGUIToggle using a DialogGUILabel to wrap the text
             </summary>
            </member>
        <member name="M:Astrogator.WrappingToggle.#ctor(System.Func{System.Boolean},System.String,Callback{System.Boolean},System.Single,System.Single)">
             <summary>
             Construct a toggle button with wrapping label
             </summary>
             <param name="set">Function to call when user toggles the toggle</param>
             <param name="labelText">Text to show next to the toggle button</param>
             <param name="selected">Function that returns true if the toggle should be on, false if off</param>
             <param name="width">Horizontal space for the toggle, text will wrap if it's wider than this</param>
             <param name="height">Vertical space for the toggle, default is auto size</param>
            </member>
        <member name="T:Astrogator.ViewTools">
             Anything UI-related that needs to be used from multiple places.
            </member>
        <member name="F:Astrogator.ViewTools.rowHeight">
             <value>
             Height of a row of our table.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.fontSize">
             <value>
             Size of font to use in our table.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.buttonIconWidth">
             <value>
             Size of button icons to use in our table.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.versionString">
             <summary>
             A string representing the version number of the mod.
             </summary>
            </member>
        <member name="M:Astrogator.ViewTools.SortTransfers(Astrogator.AstrogationModel,Astrogator.ViewTools.SortEnum,System.Boolean)">
             <summary>
             Return a list of a model's transfers sorted according to settings
             </summary>
             <param name="m">Model from which to get transfers</param>
             <param name="how">Method for sorting</param>
             <param name="descend">True for descending sort, false for ascending</param>
             <returns>
             Sorted list
             </returns>
            </member>
        <member name="F:Astrogator.ViewTools.AppIcon">
             <value>
             The icon to show for this mod in the app launcher.
             </value>
            </member>
        <member name="M:Astrogator.ViewTools.GetImage(System.String)">
             <returns>
             A texture object for the image file at the given path.
             </returns>
             <param name="filepath">Path to image file to load</param>
            </member>
        <member name="M:Astrogator.ViewTools.SolidColorTexture(UnityEngine.Color)">
             <summary>
             Borrowed from Kerbal Engineer Redux and Americanized.
             </summary>
             <param name="c">The color to use</param>
             <returns>
             A 1x1 texture
             </returns>
            </member>
        <member name="M:Astrogator.ViewTools.GetSprite(System.String)">
             <returns>
             A sprite object for the image at the given path.
             </returns>
            </member>
        <member name="M:Astrogator.ViewTools.SolidColorSprite(UnityEngine.Color)">
             <returns>
             A 1x1 sprite object of the given color.
             </returns>
            </member>
        <member name="F:Astrogator.ViewTools.halfTransparentBlack">
             <value>
             Black image with 50% opacity.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.transparent">
             <value>
             Completely transparent sprite so we can use buttons for the headers
             without the default button graphic.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.windowStyleState">
             <value>
             Backgrounds and text colors for the tooltip and main window.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.headingFont">
             <value>
             Text color for table headers.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.numberFont">
             <value>
             Text color for main table content.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.subTitleFont">
             <value>
             Text color for the line under the title.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.subTitleErrorFont">
             <value>
             Text color for the line under the title when it's an error message.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.linkFont">
             <value>
             Text color for the line under the title.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.windowStyle">
             <value>
             Font sizes, normal/highlight styles, and alignment for the tooltip and main window.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.leftHdrStyle">
             <value>
             Font sizes, normal/highlight styles, and alignment for planet header.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.midHdrStyle">
             <value>
             Font sizes, normal/highlight styles, and alignment for the time header.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.rightHdrStyle">
             <value>
             Font sizes, normal/highlight styles, and alignment for the delta V header.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.planetStyle">
             <value>
             Font sizes, normal/highlight styles, and alignment for the planet names.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.numberStyle">
             <value>
             Font sizes, normal/highlight styles, and alignment for normal content.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.settingsIcon">
             <value>
             Icon for normal state of settings button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.settingsStyleState">
             <value>
             Icon for normal state of settings button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.settingsHoverIcon">
             <value>
             Icon for hovered state of settings button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.settingsHoverStyleState">
             <value>
             Icon for hovered state of settings button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.settingsStyle">
             <value>
             Normal/highlight icons for the settings button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.backIcon">
             <summary>
             Icon for the normal state of the back button.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.backStyleState">
             <summary>
             Icon for the normal state of the back button.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.backHoverIcon">
             <summary>
             Icon for the hovered state of the back button.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.backHoverStyleState">
             <summary>
             Icon for the hovered state of the back button.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.backStyle">
             <value>
             Normal/highlight icons for the back button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.maneuverIcon">
             <value>
             Icon for normal state of maneuver node creation button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.maneuverStyleState">
             <value>
             Icon for normal state of maneuver creation button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.maneuverHoverIcon">
             <value>
             Icon for hovered state of maneuver node creation button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.maneuverHoverStyleState">
             <value>
             Icon for hovered state of maneuver creation button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.maneuverStyle">
             <value>
             Normal/highlight icons for the maneuver creation button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.warpIcon">
             <value>
             Icon for normal state of warp button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.warpStyleState">
             <value>
             Icon for normal state of warp button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.warpHoverIcon">
             <value>
             Icon for hovered state of warp button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.warpHoverStyleState">
             <value>
             Icon for hovered state of warp button.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.warpStyle">
             <summary>
             Normal/highlight icons for the warp button.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.closeIcon">
             <summary>
             Icon for close X button when not hovered.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.closeStyleState">
             <summary>
             Icon for close X button when not hovered.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.closeHoverIcon">
             <summary>
             Icon for close X button when hovered.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.closeHoverStyleState">
             <summary>
             Icon for close X button when hovered.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.closeStyle">
             <summary>
             Style for close X button.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.subTitleStyle">
             <value>
             A centered variant of the normal content font.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.notificationStyle">
             <value>
             Left aligned italic text for telling the user things.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.subTitleErrorStyle">
             <value>
             A red, centered variant of the normal content font for error messages.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.toggleStyle">
             <value>
             Variant of the standard checkbox style to support long strings.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.AstrogatorSkin">
             <value>
             The skin we use for our tooltip and main window.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.linkStyle">
             <value>
             Left aligned blue text for a link to the README in the settings.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.AstrogatorErrorSkin">
             <value>
             The skin we use for our tooltip and main window.
             </value>
            </member>
        <member name="T:Astrogator.ViewTools.ContentEnum">
             <summary>
             Types of columns in our table.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.ContentEnum.PlanetName">
             <summary>
             Left most column, left aligned, sort of a header, contains planet names
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.ContentEnum.YearsTillBurn">
             <summary>
             First time column
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.ContentEnum.DaysTillBurn">
             <summary>
             Second time columnm
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.ContentEnum.HoursTillBurn">
             <summary>
             Third time column
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.ContentEnum.MinutesTillBurn">
             <summary>
             Fourth time column
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.ContentEnum.SecondsTillBurn">
             <summary>
             Fifth time column
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.ContentEnum.DeltaV">
             <summary>
             Delta V column
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.ContentEnum.CreateManeuverNodeButton">
             <summary>
             Maneuver node creation button column
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.ContentEnum.WarpToBurnButton">
             <summary>
             Warp button column
             </summary>
            </member>
        <member name="T:Astrogator.ViewTools.SortEnum">
             <summary>
             A type defining the different sort orders available.
             Can't be the same as the column list, because we have
             four different columns for time data.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.SortEnum.Position">
             <summary>
             Sort by discovery order; first the satellites of the current
             body in inner-&gt;outer order, then satellites of its parent, etc.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.SortEnum.Name">
             <summary>
             Sort by name (currently not available in UI)
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.SortEnum.Time">
             <summary>
             Sort by time till burn
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.SortEnum.DeltaV">
             <summary>
             Sort by delta V
             </summary>
            </member>
        <member name="T:Astrogator.ViewTools.ColumnDefinition">
             <summary>
             Structure defining the properties of a column of our table.
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.header">
             <summary>
             The string to display at the top of the column
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.width">
             <summary>
             Width of the column
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.headerColSpan">
             <summary>
             Number of cells occupied horizontally by the header
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.headerStyle">
             <summary>
             Font, color, and alignment of the header
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.contentStyle">
             <summary>
             Font, color, and alignment of the normal content
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.content">
             <summary>
             How to generate the content for this column
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.vesselSpecific">
             <summary>
             True to hide this column when there's no active vessel (tracking station, KSC)
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.requiresPatchedConics">
             <summary>
             True to hide this column if maneuver nodes aren't available in this game mode.
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.sortKey">
             <summary>
             Sort order to use when the user clicks the header.
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.monospaceWidth">
             <summary>
             How wide the column is when rendering in a fixed-width font text screen.
             </summary>
            </member>
        <member name="P:Astrogator.ViewTools.ColumnDefinition.requiresTime">
             <summary>
             True if this column should be hidden if a transfer doesn't have a definite time
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.Columns">
             <value>
             Columns for our table.
             </value>
            </member>
        <member name="F:Astrogator.ViewTools.RowWidth">
             <summary>
             The width of a row and/or the window.
             Calculated from the widths of the columns and the padding.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.mainWindowMinWidth">
             <summary>
             Minimum width of the main window.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.mainWindowMinHeight">
             <summary>
             Minimum height of the main window.
             Unity will auto expand it for us! :)
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.mainWindowSpacing">
             <summary>
             Pixels between elements of the window
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.mainWindowPadding">
             <summary>
             Extra space around the edges of the window
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.wrenchPadding">
             <summary>
             Space around the edges of the settings button (only on top)
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.settingsPadding">
             <summary>
             Space around the edges of the settings pane
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.mainWindowInternalWidth">
             <summary>
             Distance from the left inner margin to the right inner margin of main window
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.settingsSpacing">
             <summary>
             Pixels between elements of the settings
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.mainWindowAnchorMin">
             <summary>
             Window-relative coordinate of the spot that stays fixed in place when the size changes.
             This choice is equivalent to UpperCenter anchoring.
             Relates to mainWindowAnchorMax somehow, but I can't tell how.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.mainWindowAnchorMax">
             <summary>
             Window-relative coordinate of the spot that stays fixed in place when the size changes.
             This choice is equivalent to UpperCenter anchoring.
             Relates to mainWindowAnchorMin somehow, but I can't tell how.
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.useEllipsis">
             <summary>
             A label option for truncating long strings with an ellipsis.
             </summary>
            </member>
        <member name="M:Astrogator.ViewTools.LabelWithStyleAndSize(System.String,UIStyle,System.Single,System.Single)">
             <summary>
             Wrapper around stock label constructor to allow specification of style.
             </summary>
             <returns>
             A label with a parameterized text, style, and size.
             </returns>
             <param name="message">The text for the label</param>
             <param name="style">Visual appearance settings for the label</param>
             <param name="width">Width of the label</param>
             <param name="height">Height of the label</param>
            </member>
        <member name="M:Astrogator.ViewTools.LabelWithStyleAndSize(System.Func{System.String},UIStyle,System.Single,System.Single)">
             <summary>
             Wrapper around stock label constructor to allow specification of style.
             </summary>
             <returns>
             A label with a parameterized text, style, and size.
             </returns>
             <param name="getString">A function that returns the text for the label</param>
             <param name="style">Visual appearance settings for the label</param>
             <param name="width">Width of the label</param>
             <param name="height">Height of the label</param>
            </member>
        <member name="M:Astrogator.ViewTools.TimePieceString(System.String,System.Double,System.Boolean,System.String)">
             <returns>
             A string formatted according to specifications, or a default string if the value is zero.
             </returns>
             <param name="fmt">String.Format format string</param>
             <param name="val">Value to represent, will be passed to the string formatter</param>
             <param name="forceShow">True to always use the given format even if val is 0</param>
             <param name="nullString">String to substitute when val is 0 and forceShow is false</param>
            </member>
        <member name="M:Astrogator.ViewTools.headerButton(System.String,UIStyle,System.String,System.Single,System.Single,Callback)">
             <summary>
             Create a button that looks like a label
             </summary>
             <param name="text">String to display</param>
             <param name="style">Style to use for the text</param>
             <param name="tooltip">Tooltip to use (not currently visible)</param>
             <param name="width">Horizontal space to take up</param>
             <param name="height">Vertical space to take up</param>
             <param name="cb">Function to call when the user clicks the button</param>
             <returns>
             Button with the given properties
             </returns>
            </member>
        <member name="M:Astrogator.ViewTools.iconButton(UnityEngine.Sprite,UIStyle,System.String,Callback)">
             <returns>
             A button with parameterized icon, tooltip, and callback.
             </returns>
             <param name="icon">Sprite to use</param>
             <param name="style">Container for sprites to use on hover, disable, etc.</param>
             <param name="tooltip">Value for tooltipText (which doesn't seem to work)</param>
             <param name="cb">Function to call when the user clicks the button</param>
            </member>
        <member name="M:Astrogator.ViewTools.AddFloatingButton(UnityEngine.Transform,System.Single,System.Single,UIStyle,System.String,UnityEngine.Events.UnityAction)">
             <summary>
             Add a button outside of the normal DialogGUI* flow layout,
             with positioning relative to edges of a parent element.
             By DMagic, with modifications.
             </summary>
             <param name="parentTransform">Transform of UI object within which to place this button</param>
             <param name="innerHorizOffset">Horizontal position; if positive, number of pixels between left edge of window and left edge of button, if negative, then vice versa on right side</param>
             <param name="innerVertOffset">Vertical position; if positive, number of pixels between bottom edge of window and bottom edge of button, if negative, then vice versa on top side</param>
             <param name="style">Style object containing the sprites for the button</param>
             <param name="tooltip">String to show when user hovers on button</param>
             <param name="onClick">Function to call when the user clicks the button</param>
            </member>
        <member name="T:Astrogator.ViewTools.DisplayUnitsEnum">
             <summary>
             Symbols representing systems of physical units
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.DisplayUnitsEnum.Metric">
             <summary>
             Système International d'Unités
             https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Metric_system_adoption_map.svg/2000px-Metric_system_adoption_map.svg.png
             </summary>
            </member>
        <member name="F:Astrogator.ViewTools.DisplayUnitsEnum.UnitedStatesCustomary">
             <summary>
             Time-tested traditional units.
             https://i.imgur.com/h5UsGxK.png
             </summary>
            </member>
        <member name="M:Astrogator.ViewTools.FormatSpeed(System.Double,Astrogator.ViewTools.DisplayUnitsEnum)">
             <summary>
             Format a speed value for display
             </summary>
             <param name="speed">Speed value in m/s</param>
             <param name="units">Type of units to use</param>
             <returns>
             Converted number string with no decimal places concatenated
             with short unit string.
             </returns>
            </member>
        <member name="M:Astrogator.ViewTools.ModelDescription(Astrogator.AstrogationModel)">
             <summary>
             Generate a string describing the state of a model.
             </summary>
             <param name="model">Model to examine</param>
             <returns>
             Description of error or warning if applicable,
             otherwise "Transfers from X".
             </returns>
            </member>
        <member name="T:Astrogator.DateTimeParts">
             <summary>
             An object that holds the parts of a time span,
             broken down into years, days, hours, minutes, and seconds.
             </summary>
            </member>
        <member name="M:Astrogator.DateTimeParts.solarDayLength(CelestialBody)">
             <summary>
             https://en.wikipedia.org/wiki/Sidereal_time#Sidereal_days_compared_to_solar_days_on_other_planets
             </summary>
            </member>
        <member name="M:Astrogator.DateTimeParts.#ctor(System.Double)">
             <summary>
             Construct an object for the given timestamp.
             </summary>
            </member>
        <member name="P:Astrogator.DateTimeParts.years">
             <summary>
             The year component of the given time.
             </summary>
            </member>
        <member name="P:Astrogator.DateTimeParts.days">
             <summary>
             The day component of the given time.
             </summary>
            </member>
        <member name="P:Astrogator.DateTimeParts.hours">
             <summary>
             The hour component of the given time.
             </summary>
            </member>
        <member name="P:Astrogator.DateTimeParts.minutes">
             <summary>
             The minute component of the given time.
             </summary>
            </member>
        <member name="P:Astrogator.DateTimeParts.seconds">
             <summary>
             The second component of the given time.
             </summary>
            </member>
        <member name="P:Astrogator.DateTimeParts.needYears">
             <returns>
             True if years must be displayed to correctly represent this time.
             </returns>
            </member>
        <member name="P:Astrogator.DateTimeParts.needDays">
             <returns>
             True if days must be displayed to correctly represent this time.
             </returns>
            </member>
        <member name="P:Astrogator.DateTimeParts.needHours">
             <returns>
             True if hours must be displayed to accurately represent this time.
             </returns>
            </member>
        <member name="P:Astrogator.DateTimeParts.needMinutes">
             <returns>
             True if minutes must be displayed to accurately represent this time.
             </returns>
            </member>
        <member name="T:Astrogator.PhysicsTools">
             <summary>
             A bunch of calculations based on Keplerian orbits and so forth.
            
             Some of these have user-visible side effects, such as creating and deleting
             several maneuver nodes rapidly! Examine before using.
             </summary>
            </member>
        <member name="F:Astrogator.PhysicsTools.Tau">
             <summary>
             Nice to avoid having to multiply PI by 2.
             I prefer using radians over degrees when possible.
             </summary>
            </member>
        <member name="F:Astrogator.PhysicsTools.BURN_PADDING">
             <summary>
             How long before a burn to abort time warp by default.
             Should be roughly half the longest reasonble burn time.
             </summary>
            </member>
        <member name="M:Astrogator.PhysicsTools.clamp(System.Double,System.Double)">
             <summary>
             Force an angle to be within 0 and Tau (2PI)
             </summary>
             <param name="angle">Angle in radians to clamp</param>
             <param name="minAllowed">Minimum angle for clamp range, default 0</param>
             <returns>
             An angle in [minAllowed,minAllowed+2PI] that has
             the same sin and cos as the param.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.AngleFromEquatorial(System.Double)">
             <summary>
             Calculate a user-friendly inclination value, the angle between
             the orbit and the equator. Never negative, never &gt; PI/2.
             </summary>
             <param name="inclination">The true inclination of the orbit in radians</param>
             <returns>
             Angle between orbit and equator in radians.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.DeltaVToOrbit(CelestialBody)">
             <summary>
             Estimate the delta V needed for the given vessel to get to orbit around the given body.
             </summary>
             <param name="body">Body to launch from</param>
             <returns>
             Delta V it would take to launch from vessel's current position to a comfortable orbit.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.EquatorialRotationSpeed(CelestialBody)">
             <summary>
             Calculate how much speed an object on the surface at the equator
             receives from the rotation of the body.
             </summary>
             <param name="body">The rotating body</param>
             <returns>
             Speed in m/s
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.AbsolutePhaseAngle(CelestialBody,System.Double,System.Double)">
             <summary>
             Calculate the offset from the hidden "reference direction"
             of the given longitude on body b at the given time.
             </summary>
             <param name="b">The body whose surface we're concerned about</param>
             <param name="time">UT at which to calculate the angle</param>
             <param name="longitude">Longitude of the point on the surface we care about</param>
             <returns>
             Angle in radians. Can be compared to AbsolutePhaseAngle for an orbit.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.AbsolutePhaseAngle(Orbit,System.Double)">
             <summary>
             Calculate a phase angle for the given orbit at the given time
             </summary>
             <param name="o">Orbit to consider</param>
             <param name="t">Time when we want to know the phase angle</param>
             <returns>
             An angle in radians that can be compared to similar values of other satellites.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.RadiusAtAbsolutePhaseAngle(Orbit,System.Double)">
             <summary>
             Calculate distance from parent body to satellite at a given absolute phase angle.
             Absolute phase angle means the angle between the body and the absolute
             reference direction. This concept allows us to compare angles for bodies
             with different LAN / AoP.
             </summary>
             <param name="o">Orbit of body to consider</param>
             <param name="phaseAngle">Angle in radians between body and the absolute reference direction</param>
             <returns>
             Distance in meters from parent body to satellite when
             absolute phase angle has the given value.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.ArrivalPhaseAngleDifference(Orbit,Orbit,System.Double)">
             <summary>
             Calculate the angle at arrival between a craft on a Hohmann transfer
             and its destination, if the craft departs at the given time.
            
             We use the orbital radii of the starting body at the start time
             and the destination body on the opposite side of the parent (180°)
             to determine the transfer orbit, which in turn determines the travel time,
             which we use to compare the position of the craft and the destination
             at arrival.
            
             This function will be called in a tight loop, so it should be fast.
             </summary>
             <param name="origOrb">Orbit of starting body</param>
             <param name="destOrb">Orbit of destination body</param>
             <param name="transTime">UT at departure</param>
             <returns>
             Angle at arrival in radians between the destination body
             and a craft on a Hohmann transfer from the starting body.
             Values will be in [-PI, PI] to allow meaningful comparisons of
             values near zero.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.TransferTravelTime(Orbit,Orbit,System.Double,System.Nullable{System.Double})">
             <summary>
             Calculate how long it takes to perform a Hohmann transfer from
             one orbiting body to another, starting at a given time.
            
             We use half the orbital period of an orbit touching the starting
             orbit at the given time and the destination orbit at the opposite
             point.
             </summary>
             <param name="origOrb">Orbit of starting body</param>
             <param name="destOrb">Orbit of destination body</param>
             <param name="transTime">UT at departure</param>
             <param name="arrivalPhaseAngle">Absolute phase angle at arrival, if already calculated; if null, will be computed from the other params</param>
             <returns>
             Time in seconds to travel from one orbit to the other,
             starting at the specified time.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.FindRoot(System.Func{System.Double,System.Double},System.Double,System.Double,System.Double,System.Double)">
             <summary>
             Find a point where a continuous function is zero.
             We use the absolute simplest bisection method,
             because it does not require us to know the derivative:
             https://en.wikipedia.org/wiki/Root-finding_algorithm#Bisection_method
             </summary>
             <param name="f">Function for which to find a root</param>
             <param name="min">Minimum value of domain to search</param>
             <param name="max">Maximum value of domain to search</param>
             <param name="epsilon">How close the return value should be to the root, default 0.0001</param>
             <param name="rangeEpsilon">Maximum value allowed for final slope, used to detect discontinuities, default 0.1</param>
             <returns>
             A value t such that f(t) ≈ 0.
             If no such value is found in the interval: double.NaN.
             If the function has a sign-changing discontinuity in the range: double.NaN.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.OptimalTransferTime(Orbit,Orbit,System.Double,System.Double)">
             <summary>
             Calculate the time in a given range when a craft on the given starting orbit
             should leave on a Hohmann transfer to reach a body on the destination orbit.
             </summary>
             <param name="origOrb">Orbit of starting body</param>
             <param name="destOrb">Orbit of destination body</param>
             <param name="minTime">Start of search range</param>
             <param name="maxTime">End of search range</param>
             <returns>
             Departure time with the closest approach at arrival.
             If there's no closest approach in the interval: double.NaN.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.BurnTimeSearch(Orbit,Orbit,System.Double,System.Double)">
             <summary>
             Evaluate our burn time solver over successive intervals
             until a solution is found.
             </summary>
             <param name="origOrb">Orbit of starting body</param>
             <param name="destOrb">Orbit of destination body</param>
             <param name="searchStart">Minimum of the first interval to search</param>
             <param name="searchEnd">Maximum of the first interval to search</param>
             <returns>
             Return value description
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.TimeAtSurfacePhaseAngle(CelestialBody,Vessel,System.Double,System.Double)">
             <summary>
             Calculate the time around closeToTime when the given landed vessel
             will reach the given phase angle through the rotation of the body.
             NOTE: Not yet completed!
             </summary>
             <param name="b">Body on which v is landed</param>
             <param name="v">Vessel to track</param>
             <param name="angle">Desired phase angle for the vessel</param>
             <param name="closeToTime">Target time around which to search for actual time</param>
             <returns>
             Time when vessel reaches the phase angle.
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.EjectionAngle(CelestialBody,System.Double,System.Double)">
             <summary>
             Calculate ejection angle of a hyperbolic orbit with the given parameters
             </summary>
             <param name="parent">Parent body we're escaping</param>
             <param name="periapsis">Radius at closest point to parent</param>
             <param name="speedAtInfinity">Desired relative escape velocity</param>
             <returns>
             Angle in radians between parent-prograde and the periapsis
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.SpeedToEscape(CelestialBody,System.Double,System.Double)">
             <returns>
             Magnitude of velocity needed to escape a body with a given speed.
             Uses traditional physics calculation involving "speed at infinity",
             which is not 100% applicable due to Spheres of Influence being finite.
             </returns>
             <param name="parent">The body we're trying to escape</param>
             <param name="radiusAtBurn">The distance from parent's center at which to determine the velocity</param>
             <param name="speedAtInfinity">The desired speed left over after we escape</param>
            </member>
        <member name="M:Astrogator.PhysicsTools.SpeedToExitSOI(CelestialBody,System.Double,System.Double)">
             <returns>
             Magnitude of velocity needed to escape a body with a given speed.
             Takes into account the size of the SOI rather than assuming it's infinite.
             Should converge to above function as sphere of influence -&gt; infinity.
             Derived directly from the vis viva equation.
             https://en.wikipedia.org/wiki/Hyperbolic_trajectory#Velocity
             </returns>
             <param name="parent">The body we're trying to escape</param>
             <param name="periapsis">The distance from parent's center at which to determine the velocity</param>
             <param name="speedAtSOI">The desired speed left over after we escape</param>
            </member>
        <member name="M:Astrogator.PhysicsTools.BurnToEscape(CelestialBody,Orbit,System.Double,System.Double)">
             <returns>
             Delta V needed to escape a body with various constraints.
             </returns>
             <param name="parent">The body we're escaping</param>
             <param name="fromOrbit">The orbit of the craft that's escaping</param>
             <param name="speedAtInfinity">The desired speed left over after we escape</param>
             <param name="burnTime">The time when we want to execute the burn</param>
            </member>
        <member name="M:Astrogator.PhysicsTools.BurnToEscape(CelestialBody,System.Double,System.Double)">
             <summary>
             Delta V needed to escape a body at a given speed from a circular orbit
             </summary>
             <param name="parent">Body from which to escape</param>
             <param name="periapsis">Radius of starting orbit</param>
             <param name="speedAtInfinity">Desired velocity at SOI exit</param>
             <returns>
             Speed change in m/s needed
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.TimeAtAngleFromMidnight(Orbit,Orbit,System.Double,System.Double)">
             <summary>
             Calculate the absolute time when a satellite will be a given angle away from
             its local midnight position.
             </summary>
             <param name="parentOrbit">Orbit of the parent body</param>
             <param name="satOrbit">Orbit of the satellite around the parent body</param>
             <param name="minTime">Absolute time to use as a minimum for the calculation</param>
             <param name="angle">0 for exactly midnight, PI/2 for parent-prograde, PI for exactly noon, 3PI/2 for parent-retrograde</param>
             <returns>
             Absolute time when craft is in desired position
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.SpeedAtPeriapsis(CelestialBody,System.Double,System.Double)">
             <summary>
             How fast would a ship with the given Ap and Pe around the given body
             be moving at its Pe?
             </summary>
             <param name="parent">Body around which we're orbiting</param>
             <param name="apoapsis">Maximum radius of orbit</param>
             <param name="periapsis">Minimum radius of orbit</param>
             <returns>
             Magnitude of velocity in m/s
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.SpeedAtApoapsis(CelestialBody,System.Double,System.Double)">
             <summary>
             How fast would a ship with the given Ap and Pe around the given body
             be moving at its Ap?
             </summary>
             <param name="parent">Body around which we're orbiting</param>
             <param name="apoapsis">Maximum radius of orbit</param>
             <param name="periapsis">Minimum radius of orbit</param>
             <returns>
             Magnitude of velocity in m/s
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.RadiusAtTime(Orbit,System.Double)">
             <returns>
             Distance from center of parent body at a given time.
             </returns>
             <param name="o">Orbit to analyze</param>
             <param name="t">Time at which to calculate the distance</param>
            </member>
        <member name="M:Astrogator.PhysicsTools.SpeedAtTime(Orbit,System.Double)">
             <returns>
             Magnitude of velocity at a given time.
             </returns>
             <param name="o">Orbit to analyze</param>
             <param name="t">Time at which to calculate the speed</param>
            </member>
        <member name="M:Astrogator.PhysicsTools.OrbitalPeriod(CelestialBody,System.Double,System.Double)">
             <returns>
             Period of an orbit with the given characteristics.
             </returns>
             <param name="parent">Body around which to orbit</param>
             <param name="apoapsis">Greatest distance from center of parent</param>
             <param name="periapsis">Smallest distance from center of parent</param>
            </member>
        <member name="M:Astrogator.PhysicsTools.BurnToNewAp(Orbit,System.Double,System.Double)">
             Determine the burn needed to enter an orbit at burnTime, with a periaps at
             current altitude in fromOrbit and apoaps at destination body.
             This pretty well nails Mun and Minmus transfers every time.
            </member>
        <member name="M:Astrogator.PhysicsTools.BurnToNewAp(CelestialBody,System.Double,System.Double)">
             <summary>
             Delta V needed to go from a circular orbit to one with a given higher apoapsis
             </summary>
             <param name="b">Body we're orbiting</param>
             <param name="newApoapsis">Apoapsis to which to raise</param>
             <param name="preBurnRadius">Radius of circular orbit prior to burn</param>
             <returns>
             Speed change in m/s needed
             </returns>
            </member>
        <member name="M:Astrogator.PhysicsTools.BurnToNewPe(Orbit,System.Double,System.Double)">
             Determine the burn needed to enter an orbit at burnTime, with an apoaps at
             current altitude in fromOrbit and periaps at destination body.
             Just like the previous function but for when you're starting higher.
            </member>
        <member name="M:Astrogator.PhysicsTools.TimeOfPlaneChange(Orbit,Orbit,System.Double,System.Boolean@)">
             Return the UT of the AN or DN, whichever is sooner
            </member>
        <member name="M:Astrogator.PhysicsTools.DeltaVToMatchPlanes(Orbit,Orbit,System.Double)">
             <summary>
             Calculate the delta V required to change planes from o to target at time burnUT.
             Borrowed from MechJeb.
             </summary>
             <param name="currentOrbit">Starting orbit</param>
             <param name="target">Destination orbit</param>
             <param name="burnUT">Time to burn</param>
             <returns>
             Delta V in m/s, in (radial, normal, prograde) format
             </returns>
            </member>
        <member name="M:Astrogator.VectorExtensions.SwapYZ(Vector3d)">
             <summary>
             Return the vector with the Y and Z components exchanged
             Borrowed from MechJeb
             </summary>
             <param name="v">Input vector</param>
             <returns>
             Vector equivalent to (v.x, v.z, v.y)
             </returns>
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.Up(Orbit,System.Double)">
             <summary>
              Normalized vector pointing radially outward from the planet
             Borrowed from MechJeb
             </summary>
             <param name="o">Orbit from which to plot the vector</param>
             <param name="UT">Time at which to plot the vector</param>
             <returns>
             Outward radial vector matching the given parameters.
             </returns>
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.SwappedOrbitalVelocityAtUT(Orbit,System.Double)">
             <summary>
             Get orbital velocity, transformed to work with world space
             Borrowed from MechJeb
             </summary>
             <param name="o">Orbit</param>
             <param name="UT">Time at which to get the velocity</param>
             <returns>
             Orbital velocity vector with Y and Z swapped to make sense.
             </returns>
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.SwappedRelativePositionAtUT(Orbit,System.Double)">
             <summary>
             Get position of orbiting entity relative to its parent body at a given time,
             transformed to work with world space
             Borrowed from MechJeb
             </summary>
             <param name="o">Orbit of entity</param>
             <param name="UT">Time at which to get the position</param>
             <returns>
             Return value description
             </returns>
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.SwappedOrbitNormal(Orbit)">
            normalized vector perpendicular to the orbital plane
            convention: as you look down along the orbit normal, the satellite revolves counterclockwise
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.MeanMotion(Orbit)">
            mean motion is rate of increase of the mean anomaly
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.MeanAnomalyAtUT(Orbit,System.Double)">
            The mean anomaly of the orbit.
            For elliptical orbits, the value return is always between 0 and 2pi
            For hyperbolic orbits, the value can be any number.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.UTAtMeanAnomaly(Orbit,System.Double,System.Double)">
            The next time at which the orbiting object will reach the given mean anomaly.
            For elliptical orbits, this will be a time between UT and UT + o.period
            For hyperbolic orbits, this can be any time, including a time in the past, if
            the given mean anomaly occurred in the past
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.AscendingNodeTrueAnomaly(Orbit,Orbit)">
            Gives the true anomaly (in a's orbit) at which a crosses its ascending node
            with b's orbit.
            The returned value is always between 0 and 360.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.DescendingNodeTrueAnomaly(Orbit,Orbit)">
            Gives the true anomaly (in a's orbit) at which a crosses its descending node
            with b's orbit.
            The returned value is always between 0 and 360.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.AscendingNodeEquatorialTrueAnomaly(Orbit)">
            Gives the true anomaly at which o crosses the equator going northwards, if o is east-moving,
            or southwards, if o is west-moving.
            The returned value is always between 0 and 360.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.DescendingNodeEquatorialTrueAnomaly(Orbit)">
            Gives the true anomaly at which o crosses the equator going southwards, if o is east-moving,
            or northwards, if o is west-moving.
            The returned value is always between 0 and 360.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.MaximumTrueAnomaly(Orbit)">
            For hyperbolic orbits, the true anomaly only takes on values in the range
             (-M, M) for some M. This function computes M.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.AscendingNodeExists(Orbit,Orbit)">
            Returns whether a has an ascending node with b. This can be false
            if a is hyperbolic and the would-be ascending node is within the opening
            angle of the hyperbola.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.DescendingNodeExists(Orbit,Orbit)">
            Returns whether a has a descending node with b. This can be false
            if a is hyperbolic and the would-be descending node is within the opening
            angle of the hyperbola.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.AscendingNodeEquatorialExists(Orbit)">
            Returns whether o has an ascending node with the equator. This can be false
            if o is hyperbolic and the would-be ascending node is within the opening
            angle of the hyperbola.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.DescendingNodeEquatorialExists(Orbit)">
            Returns whether o has a descending node with the equator. This can be false
            if o is hyperbolic and the would-be descending node is within the opening
            angle of the hyperbola.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.TrueAnomalyFromVector(Orbit,Vector3d)">
            Converts a direction, specified by a Vector3d, into a true anomaly.
            The vector is projected into the orbital plane and then the true anomaly is
            computed as the angle this vector makes with the vector pointing to the periapsis.
            The returned value is always between 0 and 360.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.GetEccentricAnomalyAtTrueAnomaly(Orbit,System.Double)">
            Originally by Zool, revised by The_Duck
            Converts a true anomaly into an eccentric anomaly.
            For elliptical orbits this returns a value between 0 and 2pi
            For hyperbolic orbits the returned value can be any number.
            NOTE: For a hyperbolic orbit, if a true anomaly is requested that does not exist (a true anomaly
            past the true anomaly of the asymptote) then an ArgumentException is thrown
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.GetMeanAnomalyAtEccentricAnomaly(Orbit,System.Double)">
            Originally by Zool, revised by The_Duck
            Converts an eccentric anomaly into a mean anomaly.
            For an elliptical orbit, the returned value is between 0 and 2pi
            For a hyperbolic orbit, the returned value is any number
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.GetMeanAnomalyAtTrueAnomaly(Orbit,System.Double)">
            Converts a true anomaly into a mean anomaly (via the intermediate step of the eccentric anomaly)
            For elliptical orbits, the output is between 0 and 2pi
            For hyperbolic orbits, the output can be any number
            NOTE: For a hyperbolic orbit, if a true anomaly is requested that does not exist (a true anomaly
            past the true anomaly of the asymptote) then an ArgumentException is thrown
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.TimeOfTrueAnomaly(Orbit,System.Double,System.Double)">
            NOTE: this function can throw an ArgumentException, if o is a hyperbolic orbit with an eccentricity
            large enough that it never attains the given true anomaly
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.TimeOfAscendingNode(Orbit,Orbit,System.Double)">
            Returns the next time at which a will cross its ascending node with b.
            For elliptical orbits this is a time between UT and UT + a.period.
            For hyperbolic orbits this can be any time, including a time in the past if
            the ascending node is in the past.
            NOTE: this function will throw an ArgumentException if a is a hyperbolic orbit and the "ascending node"
            occurs at a true anomaly that a does not actually ever attain
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.TimeOfDescendingNode(Orbit,Orbit,System.Double)">
            Returns the next time at which a will cross its descending node with b.
            For elliptical orbits this is a time between UT and UT + a.period.
            For hyperbolic orbits this can be any time, including a time in the past if
            the descending node is in the past.
            NOTE: this function will throw an ArgumentException if a is a hyperbolic orbit and the "descending node"
            occurs at a true anomaly that a does not actually ever attain
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.TimeOfAscendingNodeEquatorial(Orbit,System.Double)">
            Returns the next time at which the orbiting object will cross the equator
            moving northward, if o is east-moving, or southward, if o is west-moving.
            For elliptical orbits this is a time between UT and UT + o.period.
            For hyperbolic orbits this can by any time, including a time in the past if the
            ascending node is in the past.
            NOTE: this function will throw an ArgumentException if o is a hyperbolic orbit and the
            "ascending node" occurs at a true anomaly that o does not actually ever attain.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.TimeOfDescendingNodeEquatorial(Orbit,System.Double)">
            Returns the next time at which the orbiting object will cross the equator
            moving southward, if o is east-moving, or northward, if o is west-moving.
            For elliptical orbits this is a time between UT and UT + o.period.
            For hyperbolic orbits this can by any time, including a time in the past if the
            descending node is in the past.
            NOTE: this function will throw an ArgumentException if o is a hyperbolic orbit and the
            "descending node" occurs at a true anomaly that o does not actually ever attain.
            </member>
        <member name="M:Astrogator.MuMech_OrbitExtensions.GetRelativeInclination(Orbit,Orbit)">
             This one is from KerbalEngineer.Extensions.OrbitExtensions
             Returns a value in degrees, not radians
            </member>
        <member name="T:Astrogator.AstrogationLoadBehaviorette">
             <summary>
             The logic of loading our model got too complicated to stay embedded in the main class.
             Also, we want to share it with the RasterPropMonitor display screen.
             This isn't a full "behavior" object, but it can be used by one to take care of a lot of tasks.
            
             This class is responsible for loading the main model object and providing functions to
             refresh it as needed.
             It defers some operations to the background and keeps track of when it's OK to do that.
            
             There's no point in calculating if the window isn't open, so we suppress calculations in that case.
             We also abort any load request that happens while another load is already in progress.
             We call it an "open display" so our Raster Prop Monitor widget can get in on the act.
            
             We need to refresh the data when the orbit changes, but if you do a ten-minute burn,
             we can't churn the CPU constantly for that entire time.
             So we require that at least 5 seconds have passed since the last calculation.
            
             However, if the user toggles the window rapidly, or switches focus in the tracking station,
             we need to calculate regardless of whether 5 seconds have passed!
             The same goes for if another calculation is in progress.
            
             Burns can expire if their burn time elapses into the past, so we need to check them once per second.
             </summary>
            </member>
        <member name="M:Astrogator.AstrogationLoadBehaviorette.#ctor(Astrogator.AstrogationModel,Astrogator.AstrogationLoadBehaviorette.LoadDoneCallback)">
             <summary>
             Construct a loader object for the given model
             </summary>
             <param name="m">Model object for us to manage</param>
             <param name="unReqNotif">Function to call if we trigger our own refresh without being asked (usually because a burn expired)</param>
            </member>
        <member name="M:Astrogator.AstrogationLoadBehaviorette.Dispose">
             <summary>
             Shut down and clean up any stuff that might cause problems if it runs
             while the rest of the game is shutting down.
             </summary>
            </member>
        <member name="M:Astrogator.AstrogationLoadBehaviorette.OnDisplayOpened">
             <summary>
             Tell the loader that we are currently displaying the data.
             If it thinks we aren't, it won't calculate anything.
             </summary>
            </member>
        <member name="M:Astrogator.AstrogationLoadBehaviorette.OnDisplayClosed">
             <summary>
             Tell the loader that we're closing a display.
             If it thinks they're all gone, it won't calculate anything.
             </summary>
            </member>
        <member name="M:Astrogator.AstrogationLoadBehaviorette.AllowStart(ITargetable,System.Boolean)">
             <summary>
             Return whether to allow a new load to start now.
             </summary>
             <param name="newOrigin">The body or vessel from which to calculate transfers</param>
             <param name="overrideTimer">True if we absolutely positively must reload now even if it has been less than 5 seconds since the last one</param>
             <returns>
             True to allow load, false to prevent.
             </returns>
            </member>
        <member name="T:Astrogator.AstrogationLoadBehaviorette.LoadDoneCallback">
             <summary>
             Callback type for notifications of load completion or failure.
             </summary>
            </member>
        <member name="M:Astrogator.AstrogationLoadBehaviorette.TryStartLoad(ITargetable,Astrogator.AstrogationLoadBehaviorette.LoadDoneCallback,Astrogator.AstrogationLoadBehaviorette.LoadDoneCallback,Astrogator.AstrogationLoadBehaviorette.LoadDoneCallback,System.Boolean)">
             <summary>
             Request a refresh of the data, intended to be called by event handlers.
             Will often refuse to refresh to save CPU time!
             Note that the callbacks may be called from background jobs, and so they
             should never do any Unity UI manipulation (unless you like hard crashes).
             Setting member variables seems to be safe.
             This is supposed to be the single entry point when any other class needs to
             load data for the plug-in.
             </summary>
             <param name="newOrigin">Body for which to calculate; can override some throttling behaviors if it's different from the last one</param>
             <param name="partialLoaded">Function to call when we have enough data for a simple display, but not quite complete</param>
             <param name="fullyLoaded">Function to call on successful completion of the load</param>
             <param name="aborted">Function to call if we decide not to load</param>
             <param name="overrideTimer">True if we absolutely positively must reload now even if it has been less than 5 seconds since the last one</param>
             <returns>
             True if we kicked off an actual refresh, false otherwise.
             </returns>
            </member>
        <member name="P:Astrogator.AstrogationLoadBehaviorette.PlaneChangesEnabled">
             <summary>
             Check whether we need plane changes to display the view.
             </summary>
            </member>
        <member name="M:Astrogator.AstrogationLoadBehaviorette.StartBurnTimePolling">
             <summary>
             Check once per second if any of the transfers are out of date.
             Note, this could mean we need to re-sort the view!
             That's what the unrequestedLoadNotification is for.
             </summary>
            </member>
        <member name="T:Astrogator.AstrogationModel">
             Container for all the transfers we want to know about.
            </member>
        <member name="M:Astrogator.AstrogationModel.#ctor(ITargetable)">
             <summary>
             Construct a model object for the given origin objects.
             </summary>
             <param name="org">Body or vessel to start at</param>
            </member>
        <member name="M:Astrogator.AstrogationModel.#ctor">
             <summary>
             We need to allow an empty object to be valid so we can load most of it in the background.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.origin">
             <summary>
             The vessel or body that we're starting from.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.transfers">
             <summary>
             Transfers to calculate and show in the window.
             </summary>
            </member>
        <member name="F:Astrogator.AstrogationModel.maxInclination">
             <summary>
             The inclination past which we refuse to do any calculations.
             Most of our approximations and heuristics work best at equatorial
             and get less accurate rapidly.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.ErrorCondition">
             <summary>
             True if there's a reason we can't calculate transfers, false if everything is OK.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.badInclination">
             <summary>
             True if the vessel's inclination is too big to be worth bothering.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.retrogradeOrbit">
             <summary>
             True if the craft is in a retrograde orbit.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.inbound">
             <summary>
             Returns whether we're on an inbound hyperbolic orbit.
             Used to determine whether to provide a capture burn.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.hyperbolicOrbit">
             <summary>
             True if the craft is on a hyperbolic trajectory.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.notOrbiting">
             <summary>
             True if the craft is sitting on a surface (solid or liquid) rather than on an orbit.
             </summary>
            </member>
        <member name="M:Astrogator.AstrogationModel.Reset(ITargetable)">
             <summary>
             Re-initialize a model object for the given origin objects.
             </summary>
             <param name="org">Body or vessel to start at</param>
            </member>
        <member name="M:Astrogator.AstrogationModel.HasDestination(ITargetable)">
             <summary>
             Check whether a destination is already in the table.
             Intended to avoid unnecessary UI resets.
             </summary>
             <param name="target">Destination to look for</param>
             <returns>
             True if in table, false otherwise.
             </returns>
            </member>
        <member name="M:Astrogator.AstrogationModel.CheckIfNodesDisappeared">
             <summary>
             Check whether the user opened any manuever node editing gizmos since the last tick.
             There doesn't seem to be event-based notification for this, so we just have to poll.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.ActiveTransfer">
             <summary>
             Find the transfer that currently has an ejection burn instantiated as a real maneuver node, if any.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.ActiveEjectionBurn">
             <summary>
             Find the ejection burn that's currently instantiated as a real maneuver node, if any.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationModel.ActivePlaneChangeBurn">
             <summary>
             Find the plane change burn that's currently instantiated as a real maneuver node, if any.
             </summary>
            </member>
        <member name="T:Astrogator.AstrogationView">
             <summary>
             A DialogGUI* object that displays our app's data.
             Intended for embedding in a MultiOptionDialog.
             </summary>
            </member>
        <member name="M:Astrogator.AstrogationView.#ctor(Astrogator.AstrogationModel,Astrogator.AstrogationView.ResetCallback,UnityEngine.Events.UnityAction)">
             <summary>
             Construct a view for the given model.
             </summary>
             <param name="m">Model object for which to make a view</param>
             <param name="reset">Function to call when the view needs to be re-initiated</param>
             <param name="close">Function to call when the user clicks a close button</param>
            </member>
        <member name="T:Astrogator.AstrogationView.ResetCallback">
             <summary>
             Type of function pointer used to request a re-creation of the UI.
             This is needed because the DialogGUI* functions don't allow us to
             make dynamic chnages to a UI beyond changing a label's text.
             </summary>
            </member>
        <member name="P:Astrogator.AstrogationView.ColumnHeaders">
             <summary>
             UI object representing the top row of the table
             </summary>
            </member>
        <member name="M:Astrogator.AstrogationView.Show">
             <summary>
             Launch a PopupDialog containing the view.
             Use Dismiss() to get rid of it.
             </summary>
            </member>
        <member name="M:Astrogator.AstrogationView.Dismiss">
             <summary>
             Close the popup.
             </summary>
            </member>
        <member name="T:Astrogator.TransferModel">
             An object representing everything we need to know about a particular transfer.
            </member>
        <member name="M:Astrogator.TransferModel.#ctor(ITargetable,ITargetable)">
             <summary>
             Construct a model object.
             </summary>
            </member>
        <member name="P:Astrogator.TransferModel.destination">
             <summary>
             The body we're transferring to.
             </summary>
            </member>
        <member name="P:Astrogator.TransferModel.transferDestination">
             <summary>
             The SOI that we're aiming at, possibly an ancestor of our ultimate
             destination if the user targeted a distant moon.
             </summary>
            </member>
        <member name="P:Astrogator.TransferModel.transferParent">
             <summary>
             The reference body of the transfer portion of our route.
             </summary>
            </member>
        <member name="P:Astrogator.TransferModel.retrogradeTransfer">
             <summary>
             True if the transfer portion of this trajectory is retrograde, false otherwise.
             So for a retrograde Kerbin orbit, this is true for Mun and false for Duna.
             </summary>
            </member>
        <member name="P:Astrogator.TransferModel.origin">
             <summary>
             The body we're transferring from.
             </summary>
            </member>
        <member name="P:Astrogator.TransferModel.ejectionBurn">
             <summary>
             Representation of the initial burn to start the transfer.
             </summary>
            </member>
        <member name="P:Astrogator.TransferModel.planeChangeBurn">
             <summary>
             Representation of the burn to change into the destination's orbital plane.
             </summary>
            </member>
        <member name="M:Astrogator.TransferModel.CalculateEjectionBurn">
             <summary>
             Calculate the time and delta V of the burn needed to transfer.
             </summary>
            </member>
        <member name="M:Astrogator.TransferModel.CalculatePlaneChangeBurn">
             <summary>
             Calculate the time and delta V of the burn needed to change planes.
             </summary>
            </member>
        <member name="M:Astrogator.TransferModel.HaveEncounter">
             <summary>
             Check whether the current vessel currently has an encounter with this transfer's destination.
             Assumes that all of our maneuver nodes have been placed.
             </summary>
             <returns>
            
             </returns>
            </member>
        <member name="M:Astrogator.TransferModel.CheckIfNodesDisappeared">
             <summary>
             Check whether the user opened any manuever node editing gizmos since the last tick.
             There doesn't seem to be event-based notification for this, so we just have to poll.
             </summary>
            </member>
        <member name="M:Astrogator.TransferModel.CreateManeuvers">
             <summary>
             Turn this transfer's burns into user visible maneuver nodes.
             This is the behavior for the maneuver node icon.
             </summary>
            </member>
        <member name="M:Astrogator.TransferModel.WarpToBurn">
             <summary>
             Warp to (near) the burn.
             Since you usually need to start burning before the actual node,
             we use some simple padding logic to determine how far to warp.
             If you're more than five minutes from the burn, then we warp
             to that five minute mark. This should allow for most of the long burns.
             If you're closer than five minutes from the burn, then we warp
             right up to the moment of the actual burn.
             If you're _already_ warping, cancel the warp (suggested by Kottabos).
             </summary>
            </member>
        <member name="T:Astrogator.TransferView">
             A class that displays a given transfer's info.
             Corresponds to one row of the main window.
            </member>
        <member name="M:Astrogator.TransferView.#ctor(Astrogator.TransferModel)">
             <summary>
             Construct a view for the given model.
             </summary>
             <param name="m">Model for which to construct a view</param>
            </member>
        <member name="M:Astrogator.TransferView.Refresh">
             <summary>
             Update the data we display.
             </summary>
             <returns>
             True if the display needs to be refreshed, false otherwise.
             </returns>
            </member>
        <member name="M:Astrogator.TransferView.getYearValue">
             <returns>
             String representing years till burn.
             </returns>
            </member>
        <member name="M:Astrogator.TransferView.getDayValue">
             <returns>
             String representing days till burn.
             </returns>
            </member>
        <member name="M:Astrogator.TransferView.getHourValue">
             <returns>
             String representing hours till burn.
             </returns>
            </member>
        <member name="M:Astrogator.TransferView.getMinuteValue">
             <returns>
             String representing minutes till burn.
             </returns>
            </member>
        <member name="M:Astrogator.TransferView.getSecondValue">
             <returns>
             String representing seconds till burn.
             </returns>
            </member>
        <member name="M:Astrogator.TransferView.getDeltaV">
             <returns>
             String representing delta V of the burn.
             </returns>
            </member>
        <member name="T:Astrogator.BurnModel">
             An object representing a maneuver, but without creating an
             actual maneuver node, so we can store the data and use it later.
            </member>
        <member name="M:Astrogator.BurnModel.#ctor(System.Nullable{System.Double},System.Double,System.Double,System.Double)">
             <summary>
             Construct a burn object with the given parameters.
             </summary>
             <param name="t">Time of burn</param>
             <param name="pro">Prograde component</param>
             <param name="nor">Normal component</param>
             <param name="rad">Radial component</param>
            </member>
        <member name="M:Astrogator.BurnModel.#ctor(System.Nullable{System.Double},Vector3d)">
             <summary>
             Construct a burn object from a time and a vector.
             </summary>
             <param name="t">Time of burn</param>
             <param name="dv">3 dimensional vector describing the burn, should be in (radial, normal, prograde) format.</param>
            </member>
        <member name="P:Astrogator.BurnModel.node">
             <value>
             Maneuver node created from this burn, if any.
             </value>
            </member>
        <member name="P:Astrogator.BurnModel.atTime">
             <summary>
             The UT of the burn.
             If null, then the burn can happen anytime (as when launching from an indeterminate position).
             </summary>
            </member>
        <member name="P:Astrogator.BurnModel.prograde">
             <summary>
             Prograde burn component in m/s.
             </summary>
            </member>
        <member name="P:Astrogator.BurnModel.normal">
             <summary>
             Normal burn component in m/s.
             </summary>
            </member>
        <member name="P:Astrogator.BurnModel.radial">
             <summary>
             Radial burn component in m/s.
             </summary>
            </member>
        <member name="P:Astrogator.BurnModel.totalDeltaV">
             <summary>
             Magnitude of the dV vector.
             </summary>
            </member>
        <member name="M:Astrogator.BurnModel.ToActiveManeuver">
             <summary>
             Generate a visible maneuver using this object's parameters.
             </summary>
            </member>
        <member name="M:Astrogator.BurnModel.CheckIfNodeDisappeared">
             <summary>
             Check whether the user opened this manuever node's editing gizmo since the last tick.
             There doesn't seem to be event-based notification for this, so we just have to poll.
             </summary>
            </member>
        <member name="M:Astrogator.BurnModel.NodeDeleted">
             <summary>
             When a maneuver node is deleted, release our reference to it.
             </summary>
            </member>
        <member name="M:Astrogator.BurnModel.RemoveNode">
             <summary>
             Remove a previously added maneuver node representing this burn.
             </summary>
            </member>
        <member name="M:Astrogator.BurnModel.EditNode">
             <summary>
             Pop open the maneuver node editing widget for this burn.
             Note that any changes the user makes will NOT affect this object!
             We are storing the *initial* burn info only, and any tweaks the
             user makes are the user's own business.
             </summary>
            </member>
        <member name="T:Astrogator.OrbitModel">
             <summary>
             Simplified object representing an orbit, which we use
             to compare one orbit to another easily.
             </summary>
            </member>
        <member name="M:Astrogator.OrbitModel.#ctor(Orbit)">
             <summary>
             Construct one of our orbit objects from the given stock orbit.
             </summary>
             <param name="o">Orbit from which to copy orbital parameters</param>
            </member>
        <member name="M:Astrogator.OrbitModel.ComparisonDescription(Orbit)">
             <summary>
             Generate a string describing how the given orbit differs from this object's orbit.
             </summary>
             <param name="o">Orbit for comparison</param>
             <returns>
             A string stating whether the semimajor axis, eccentricity, inclination,
             longitude of ascending node, and/or argument of periapsis are different.
             </returns>
            </member>
        <member name="M:Astrogator.OrbitModel.Equals(Orbit)">
             <summary>
             Check whether the given orbit is different from this one.
             </summary>
             <param name="o">Orbit for comparison</param>
             <returns>
             True if they're the same or close enough, false otherwise.
             </returns>
            </member>
        <member name="T:Astrogator.TooltipExtensions">
             <summary>
             Utilities to simplify use of tooltips with DialogGUI*-based UIs.
             </summary>
            </member>
        <member name="M:Astrogator.TooltipExtensions.SetTooltip(UnityEngine.GameObject,System.String,System.String)">
             <summary>
             Create a tooltip object for a given GameObject, containing both
             a title and a subtitle.
             </summary>
             <param name="gameObj">GameObject to which we want to add a tooltip</param>
             <param name="title">Highlighted text for the tooltip</param>
             <param name="text">Less emphasized text for the tooltip</param>
            </member>
        <member name="M:Astrogator.TooltipExtensions.SetTooltip(UnityEngine.GameObject,System.String)">
             <summary>
             Create a tooltip object for a given GameObject, containing just one simple string.
             </summary>
             <param name="gameObj">GameObject to which we want to add a tooltip</param>
             <param name="tooltip">The text to show in the tooltip</param>
             <returns>
             True if we are able to create the tooltip, false otherwise
             </returns>
            </member>
        <member name="M:Astrogator.TooltipExtensions.DeferTooltip(DialogGUIBase)">
             <summary>
             Set up callbacks to activate a tooltip for a DialogGUI* object later.
             DialogGUI* objects don't have GameObjects until they're displayed,
             and you need that to add a tooltip, so we need an asynchronous strategy.
             </summary>
             <param name="gb">DialogGUI* object that needs a tooltip</param>
             <returns>
             The same object that was passed in
             </returns>
            </member>
        <member name="T:Astrogator.DebugTools">
             Tools to help with debugging.
             They'd be module-level global variables if C# allowed that.
            </member>
        <member name="M:Astrogator.DebugTools.DbgFmt(System.String,System.Object[])">
             <summary>
             Add a formattable string to the debug output.
             Automatically prepends the mod name and a timestamp.
             </summary>
             <param name="format">String.Format format string</param>
             <param name="args">Parameters for the format string, if any</param>
            </member>
        <member name="M:Astrogator.DebugTools.DbgExc(System.String,System.Exception)">
             <summary>
             Log a debug message about an Exception
             </summary>
             <param name="description">Explanation of the context in which the exception was raised</param>
             <param name="ex">The exception to log</param>
            </member>
        <member name="M:Astrogator.DebugTools.printComponentNames(UnityEngine.GameObject)">
             <summary>
             List the components associated with a Unityu GameObject
             </summary>
             <param name="gameObj">The object to examine</param>
            </member>
        <member name="T:Astrogator.Settings">
             <summary>
             Wrapper around ConfigNode for our .settings file.
             </summary>
            </member>
        <member name="M:Astrogator.Settings.Save">
             <summary>
             Save current settings to disk.
             </summary>
            </member>
        <member name="F:Astrogator.Settings.defaultWindowPosition">
             <summary>
             Default position for main window.
             Should be a value that works for all UI Scale values.
             </summary>
            </member>
        <member name="P:Astrogator.Settings.Instance">
             <summary>
             We don't want multiple copies of this floating around clobbering one another.
             </summary>
             <value>
             Singleton instance for our settings object.
             </value>
            </member>
        <member name="F:Astrogator.Settings.MainWindowPosition">
             <value>
             Screen position of the main window.
             </value>
            </member>
        <member name="F:Astrogator.Settings.MainWindowVisible">
             <value>
             Whether main window is visible or not.
             </value>
            </member>
        <member name="F:Astrogator.Settings.ShowSettings">
             <value>
             Whether settings are visible or not.
             </value>
            </member>
        <member name="F:Astrogator.Settings.DeleteExistingManeuvers">
             <value>
             Whether to delete maneuvers in order to determine plane changes.
             False by default because this could be very disruptive.
             </value>
            </member>
        <member name="F:Astrogator.Settings.GeneratePlaneChangeBurns">
             <value>
             Whether to generate plane change maneuvers.
             On by default because otherwise the ejection maneuver may not be enough.
             </value>
            </member>
        <member name="F:Astrogator.Settings.AddPlaneChangeDeltaV">
             <value>
             Whether to include the delta V of plane change maneuvers in the display.
             Default to false because otherwise people might burn the total amount to eject.
             </value>
            </member>
        <member name="F:Astrogator.Settings.AutoTargetDestination">
             <value>
             Whether the destination should be set as target when creeating maneuvers.
             On by default because it's almost always what you'd want.
             </value>
            </member>
        <member name="F:Astrogator.Settings.AutoFocusDestination">
             <value>
             Whether the destination should be set as focus when creating maneuvers.
             On by default because it's convenient to be able to fine tune your arrival.
             Note that if our maneuvers don't give you an encounter, we'll focus
             the parent body of the transfer instead (usually Sun).
             </value>
            </member>
        <member name="F:Astrogator.Settings.AutoSetSAS">
             <value>
             If true, creating a maneuver node will enable SAS and set it to maneuver mode.
             </value>
            </member>
        <member name="F:Astrogator.Settings.AutoEditEjectionNode">
             <value>
             Whether to open the ejection maneuver node for editing upon creation.
             On by default because it's the first one you'll want to use for fine tuning.
             </value>
            </member>
        <member name="F:Astrogator.Settings.AutoEditPlaneChangeNode">
             <value>
             Whether to open the plane change maneuver node for editing upon creation.
             Off by default because usually you'd want to edit the ejection node instead.
             </value>
            </member>
        <member name="F:Astrogator.Settings.TransferSort">
             <summary>
             How to sort the table.
             </summary>
            </member>
        <member name="F:Astrogator.Settings.DescendingSort">
             <summary>
             True if the sort should be largest value at the top, false otherwise.
             </summary>
            </member>
        <member name="F:Astrogator.Settings.DisplayUnits">
             <summary>
             Unit system for display of physical quantities.
             </summary>
            </member>
        <member name="F:Astrogator.Settings.ShowTrackedAsteroids">
             <summary>
             True if tracked asteroids should be included in the list of transfers, false to leave them out.
             </summary>
            </member>
        <member name="F:Astrogator.Settings.TranslationAdjust">
             <summary>
             True to use the RCS translation controls to adjust generated maneuver nodes.
             Includes both the HNJIKL keys and the joystick/controller translation axes.
             Only applies when RCS is turned off!
             </summary>
            </member>
        <member name="T:Astrogator.SettingsView">
             <summary>
             A GUI object allowing the user to edit the settings.
             </summary>
            </member>
        <member name="M:Astrogator.SettingsView.#ctor(Astrogator.AstrogationView.ResetCallback)">
             <summary>
             Construct a GUI object that allows the user to edit the settings.
             </summary>
            </member>
    </members>
</doc>
